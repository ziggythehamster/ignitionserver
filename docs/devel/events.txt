######################## EVENT REPLY ########################
# EVENT <time-stamp> <object> <event type> <parameters>     #
#############################################################

List of EVENTs supported by ignitionServer.
Note, this document is only for planning purposes and this will
change at any time. Do not consider this to be good working
material!

## ANOTHER NOTE
## The IRCX draft left out a key thing in the EVENT command.
## You can't specify specific events! To cope, you can use
## Type.Event.. If you wanted the event for SOCKET OPEN, it'd
## be SOCKET.OPEN. You can also use the original "wildcard" method
## if you want.

SOCKET:
 OPEN   - any socket that opens
 CLOSE  - any socket that closes

USER:
 LOGON      - generated after any user registers (not their nick)
 LOGOFF     - generated after a QUIT message is recieved, or the user disconnects
 MODECHANGE - generated when a user changes their modes, or gets modes set on them
 NICKCHANGE - generated when a user changes their nick
 JOIN       - generated when a user joins a channel
 PART       - generated when a user parts a channel
 QUIT       - generated when a user quits; includes quit message

CHANNEL:
 CREATE      - any channel comes into existance (via /create, or /join to an empty chan)
 TOPICCHANGE - results when a channel's topic is changed
 MODECHANGE  - generated when a channel's modes are changed
 JOIN        - generated by a user joining a channel
 PART        - generated by a user leaving a channel

SERVER:
 CONNECT    - when a server connects
 DISCONNECT - when a server disconnects
 (the following 2 events may not be implemented)
 USERCONNECT    - when a user NOT on the current server connects
 USERDISCONNECT - when a user NOT on the current server disconnects